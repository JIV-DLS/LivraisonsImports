{
    "swagger": "2.0",
    "info": {
        "title": "Custom Bikes",
        "contact": {
            "name": "Developer Contact",
            "url": "https://www.example.com"
        },
        "version": "1.0"
    },
    "host": "localhost:8000",
    "basePath": "",
    "schemes": [
        "http"
    ],
    "paths": {
        "/api/actions": {
            "get": {
                "tags": [
                    "Actions"
                ],
                "summary": "List Actions",
                "responses": {
                    "200": {
                        "description": "Success: List all Actions",
                        "schema": {
                            "$ref": "#/definitions/Action"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/Actions": {
            "post": {
                "tags": [
                    "Actions"
                ],
                "summary": "Create Action",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Action"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success: A Newly Created Action",
                        "schema": {
                            "$ref": "#/definitions/Action"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            }
        },
        "/api/Actions/{id}": {
            "get": {
                "tags": [
                    "Actions"
                ],
                "summary": "Get Action by Id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Display the specified Action by id.",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the Action",
                        "schema": {
                            "$ref": "#/definitions/Action"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "put": {
                "tags": [
                    "Actions"
                ],
                "summary": "Update Action",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Update the specified Action by id.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Action"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the Action updated",
                        "schema": {
                            "$ref": "#/definitions/Action"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Actions"
                ],
                "summary": "Delete Action",
                "description": "Delete the specified Action by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Action id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    },
                    "204": {
                        "description": "Success: successful deleted"
                    }
                }
            }
        },
        "/api/adresses": {
            "get": {
                "tags": [
                    "Adresses"
                ],
                "summary": "List Adresses",
                "responses": {
                    "200": {
                        "description": "Success: List all Adresses",
                        "schema": {
                            "$ref": "#/definitions/Adresse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/Adresses": {
            "post": {
                "tags": [
                    "Adresses"
                ],
                "summary": "Create Adresse",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Adresse"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success: A Newly Created Adresse",
                        "schema": {
                            "$ref": "#/definitions/Adresse"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            }
        },
        "/api/Adresses/{id}": {
            "get": {
                "tags": [
                    "Adresses"
                ],
                "summary": "Get Adresse by Id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Display the specified Adresse by id.",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the Adresse",
                        "schema": {
                            "$ref": "#/definitions/Adresse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "put": {
                "tags": [
                    "Adresses"
                ],
                "summary": "Update Adresse",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Update the specified Adresse by id.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Adresse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the Adresse updated",
                        "schema": {
                            "$ref": "#/definitions/Adresse"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Adresses"
                ],
                "summary": "Delete Adresse",
                "description": "Delete the specified Adresse by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Adresse id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    },
                    "204": {
                        "description": "Success: successful deleted"
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create new User",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success: A Newly Created User",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "200": {
                        "description": "Success: operation Successfully"
                    },
                    "401": {
                        "description": "Refused: Unauthenticated"
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "loggin an user",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: operation Successfully"
                    },
                    "401": {
                        "description": "Refused: Unauthenticated"
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "logout an user",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: operation Successfully"
                    },
                    "401": {
                        "description": "Refused: Unauthenticated"
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/bikes": {
            "get": {
                "tags": [
                    "Bikes"
                ],
                "summary": "List Bikes",
                "responses": {
                    "200": {
                        "description": "Success: List all Bikes",
                        "schema": {
                            "$ref": "#/definitions/Bike"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Bikes"
                ],
                "summary": "Create Bike",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Bike"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success: A Newly Created Bike",
                        "schema": {
                            "$ref": "#/definitions/Bike"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/bikes/{id}": {
            "get": {
                "tags": [
                    "Bikes"
                ],
                "summary": "Get Bike by Id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Display the specified bike by id.",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the Bike",
                        "schema": {
                            "$ref": "#/definitions/Bike"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Bikes"
                ],
                "summary": "Update Bike",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Update the specified bike by id.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Bike"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the Bike updated",
                        "schema": {
                            "$ref": "#/definitions/Bike"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Bikes"
                ],
                "summary": "Delete bike",
                "description": "Delete the specified bike by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bike id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not found"
                    },
                    "204": {
                        "description": "Success: successful deleted"
                    }
                }
            }
        },
        "/api/builders": {
            "get": {
                "tags": [
                    "Builders"
                ],
                "summary": "List Builders",
                "responses": {
                    "200": {
                        "description": "Success: List all Builders",
                        "schema": {
                            "$ref": "#/definitions/Builder"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Builders"
                ],
                "summary": "Create Builder",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Builder"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success: A Newly Created Builder",
                        "schema": {
                            "$ref": "#/definitions/Builder"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            }
        },
        "/api/builders/{id}": {
            "get": {
                "tags": [
                    "Builders"
                ],
                "summary": "Get Builder by Id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Display the specified Builder by id.",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the Builder",
                        "schema": {
                            "$ref": "#/definitions/Builder"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "put": {
                "tags": [
                    "Builders"
                ],
                "summary": "Update Builder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Update the specified Builder by id.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Builder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the Builder updated",
                        "schema": {
                            "$ref": "#/definitions/Builder"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Builders"
                ],
                "summary": "Delete Builder",
                "description": "Delete the specified Builder by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Builder id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    },
                    "204": {
                        "description": "Success: successful deleted"
                    }
                }
            }
        },
        "/api/employes": {
            "get": {
                "tags": [
                    "Employes"
                ],
                "summary": "List Employes",
                "responses": {
                    "200": {
                        "description": "Success: List all Employes",
                        "schema": {
                            "$ref": "#/definitions/Employe"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/Employes": {
            "post": {
                "tags": [
                    "Employes"
                ],
                "summary": "Create Employe",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Employe"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success: A Newly Created Employe",
                        "schema": {
                            "$ref": "#/definitions/Employe"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            }
        },
        "/api/Employes/{id}": {
            "get": {
                "tags": [
                    "Employes"
                ],
                "summary": "Get Employe by Id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Display the specified Employe by id.",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the Employe",
                        "schema": {
                            "$ref": "#/definitions/Employe"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "put": {
                "tags": [
                    "Employes"
                ],
                "summary": "Update Employe",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Update the specified Employe by id.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Employe"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the Employe updated",
                        "schema": {
                            "$ref": "#/definitions/Employe"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Employes"
                ],
                "summary": "Delete Employe",
                "description": "Delete the specified Employe by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employe id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    },
                    "204": {
                        "description": "Success: successful deleted"
                    }
                }
            }
        },
        "/api/etatsLivraisons": {
            "get": {
                "tags": [
                    "EtatsLivraisons"
                ],
                "summary": "List EtatsLivraisons",
                "responses": {
                    "200": {
                        "description": "Success: List all EtatsLivraisons",
                        "schema": {
                            "$ref": "#/definitions/EtatsLivraison"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/EtatsLivraisons": {
            "post": {
                "tags": [
                    "EtatsLivraisons"
                ],
                "summary": "Create EtatsLivraison",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EtatsLivraison"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success: A Newly Created EtatsLivraison",
                        "schema": {
                            "$ref": "#/definitions/EtatsLivraison"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            }
        },
        "/api/EtatsLivraisons/{id}": {
            "get": {
                "tags": [
                    "EtatsLivraisons"
                ],
                "summary": "Get EtatsLivraison by Id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Display the specified EtatsLivraison by id.",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the EtatsLivraison",
                        "schema": {
                            "$ref": "#/definitions/EtatsLivraison"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "put": {
                "tags": [
                    "EtatsLivraisons"
                ],
                "summary": "Update EtatsLivraison",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Update the specified EtatsLivraison by id.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EtatsLivraison"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the EtatsLivraison updated",
                        "schema": {
                            "$ref": "#/definitions/EtatsLivraison"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "delete": {
                "tags": [
                    "EtatsLivraisons"
                ],
                "summary": "Delete EtatsLivraison",
                "description": "Delete the specified EtatsLivraison by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "EtatsLivraison id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    },
                    "204": {
                        "description": "Success: successful deleted"
                    }
                }
            }
        },
        "/api/garages": {
            "get": {
                "tags": [
                    "Garages"
                ],
                "summary": "List Garages",
                "responses": {
                    "200": {
                        "description": "Success: List all Garages",
                        "schema": {
                            "$ref": "#/definitions/Garage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/Garages": {
            "post": {
                "tags": [
                    "Garages"
                ],
                "summary": "Create Garage",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Garage"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success: A Newly Created Garage",
                        "schema": {
                            "$ref": "#/definitions/Garage"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            }
        },
        "/api/Garages/{id}": {
            "get": {
                "tags": [
                    "Garages"
                ],
                "summary": "Get Garage by Id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Display the specified Garage by id.",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the Garage",
                        "schema": {
                            "$ref": "#/definitions/Garage"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "put": {
                "tags": [
                    "Garages"
                ],
                "summary": "Update Garage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Update the specified Garage by id.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Garage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the Garage updated",
                        "schema": {
                            "$ref": "#/definitions/Garage"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Garages"
                ],
                "summary": "Delete Garage",
                "description": "Delete the specified Garage by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Garage id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    },
                    "204": {
                        "description": "Success: successful deleted"
                    }
                }
            }
        },
        "/api/items": {
            "get": {
                "tags": [
                    "Items"
                ],
                "summary": "List Items",
                "responses": {
                    "200": {
                        "description": "Success: List all Items",
                        "schema": {
                            "$ref": "#/definitions/Item"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Items"
                ],
                "summary": "Create Item",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Item"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success: A Newly Created Item",
                        "schema": {
                            "$ref": "#/definitions/Item"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/items/{id}": {
            "get": {
                "tags": [
                    "Items"
                ],
                "summary": "Get Item by Id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Display the specified Item by id.",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the Item",
                        "schema": {
                            "$ref": "#/definitions/Item"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Items"
                ],
                "summary": "Update Item",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Update the specified Item by id.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Item"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the Item updated",
                        "schema": {
                            "$ref": "#/definitions/Item"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Items"
                ],
                "summary": "Delete Item",
                "description": "Delete the specified Item by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Item id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not found"
                    },
                    "204": {
                        "description": "Success: successful deleted"
                    }
                }
            }
        },
        "/api/lieuxLivraisons": {
            "get": {
                "tags": [
                    "LieuxLivraisons"
                ],
                "summary": "List LieuxLivraisons",
                "responses": {
                    "200": {
                        "description": "Success: List all LieuxLivraisons",
                        "schema": {
                            "$ref": "#/definitions/LieuxLivraison"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/LieuxLivraisons": {
            "post": {
                "tags": [
                    "LieuxLivraisons"
                ],
                "summary": "Create LieuxLivraison",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LieuxLivraison"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success: A Newly Created LieuxLivraison",
                        "schema": {
                            "$ref": "#/definitions/LieuxLivraison"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            }
        },
        "/api/LieuxLivraisons/{id}": {
            "get": {
                "tags": [
                    "LieuxLivraisons"
                ],
                "summary": "Get LieuxLivraison by Id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Display the specified LieuxLivraison by id.",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the LieuxLivraison",
                        "schema": {
                            "$ref": "#/definitions/LieuxLivraison"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "put": {
                "tags": [
                    "LieuxLivraisons"
                ],
                "summary": "Update LieuxLivraison",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Update the specified LieuxLivraison by id.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LieuxLivraison"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the LieuxLivraison updated",
                        "schema": {
                            "$ref": "#/definitions/LieuxLivraison"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "delete": {
                "tags": [
                    "LieuxLivraisons"
                ],
                "summary": "Delete LieuxLivraison",
                "description": "Delete the specified LieuxLivraison by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "LieuxLivraison id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    },
                    "204": {
                        "description": "Success: successful deleted"
                    }
                }
            }
        },
        "/api/livraisons": {
            "get": {
                "tags": [
                    "Livraisons"
                ],
                "summary": "List Livraisons",
                "responses": {
                    "200": {
                        "description": "Success: List all Livraisons",
                        "schema": {
                            "$ref": "#/definitions/Livraison"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/Livraisons": {
            "post": {
                "tags": [
                    "Livraisons"
                ],
                "summary": "Create Livraison",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Livraison"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success: A Newly Created Livraison",
                        "schema": {
                            "$ref": "#/definitions/Livraison"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            }
        },
        "/api/Livraisons/{id}": {
            "get": {
                "tags": [
                    "Livraisons"
                ],
                "summary": "Get Livraison by Id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Display the specified Livraison by id.",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the Livraison",
                        "schema": {
                            "$ref": "#/definitions/Livraison"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "put": {
                "tags": [
                    "Livraisons"
                ],
                "summary": "Update Livraison",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Update the specified Livraison by id.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Livraison"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the Livraison updated",
                        "schema": {
                            "$ref": "#/definitions/Livraison"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Livraisons"
                ],
                "summary": "Delete Livraison",
                "description": "Delete the specified Livraison by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Livraison id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    },
                    "204": {
                        "description": "Success: successful deleted"
                    }
                }
            }
        },
        "/api/marchandise": {
            "get": {
                "tags": [
                    "marchandise"
                ],
                "summary": "List marchandise",
                "responses": {
                    "200": {
                        "description": "Success: List all marchandise",
                        "schema": {
                            "$ref": "#/definitions/Marchandise"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "tags": [
                    "marchandise"
                ],
                "summary": "Create Marchandise",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Marchandise"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success: A Newly Created Marchandise",
                        "schema": {
                            "$ref": "#/definitions/Marchandise"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            }
        },
        "/api/marchandise/{id}": {
            "get": {
                "tags": [
                    "marchandise"
                ],
                "summary": "Get Marchandise by Id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Display the specified Marchandise by id.",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the Marchandise",
                        "schema": {
                            "$ref": "#/definitions/Marchandise"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "put": {
                "tags": [
                    "marchandise"
                ],
                "summary": "Update Marchandise",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Update the specified Marchandise by id.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Marchandise"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the Marchandise updated",
                        "schema": {
                            "$ref": "#/definitions/Marchandise"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "delete": {
                "tags": [
                    "marchandise"
                ],
                "summary": "Delete Marchandise",
                "description": "Delete the specified Marchandise by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Marchandise id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    },
                    "204": {
                        "description": "Success: successful deleted"
                    }
                }
            }
        },
        "/api/navires": {
            "get": {
                "tags": [
                    "Navires"
                ],
                "summary": "List Navires",
                "responses": {
                    "200": {
                        "description": "Success: List all Navires",
                        "schema": {
                            "$ref": "#/definitions/Navire"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/Navires": {
            "post": {
                "tags": [
                    "Navires"
                ],
                "summary": "Create Navire",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Navire"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success: A Newly Created Navire",
                        "schema": {
                            "$ref": "#/definitions/Navire"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            }
        },
        "/api/Navires/{id}": {
            "get": {
                "tags": [
                    "Navires"
                ],
                "summary": "Get Navire by Id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Display the specified Navire by id.",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the Navire",
                        "schema": {
                            "$ref": "#/definitions/Navire"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "put": {
                "tags": [
                    "Navires"
                ],
                "summary": "Update Navire",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Update the specified Navire by id.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Navire"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the Navire updated",
                        "schema": {
                            "$ref": "#/definitions/Navire"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Navires"
                ],
                "summary": "Delete Navire",
                "description": "Delete the specified Navire by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Navire id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    },
                    "204": {
                        "description": "Success: successful deleted"
                    }
                }
            }
        },
        "/api/profils": {
            "get": {
                "tags": [
                    "Profils"
                ],
                "summary": "List Profils",
                "responses": {
                    "200": {
                        "description": "Success: List all Profils",
                        "schema": {
                            "$ref": "#/definitions/Profil"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/Profils": {
            "post": {
                "tags": [
                    "Profils"
                ],
                "summary": "Create Profil",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Profil"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success: A Newly Created Profil",
                        "schema": {
                            "$ref": "#/definitions/Profil"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            }
        },
        "/api/Profils/{id}": {
            "get": {
                "tags": [
                    "Profils"
                ],
                "summary": "Get Profil by Id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Display the specified Profil by id.",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the Profil",
                        "schema": {
                            "$ref": "#/definitions/Profil"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "put": {
                "tags": [
                    "Profils"
                ],
                "summary": "Update Profil",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Update the specified Profil by id.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Profil"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the Profil updated",
                        "schema": {
                            "$ref": "#/definitions/Profil"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Profils"
                ],
                "summary": "Delete Profil",
                "description": "Delete the specified Profil by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Profil id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    },
                    "204": {
                        "description": "Success: successful deleted"
                    }
                }
            }
        },
        "/api/bikes/{bike_id}/ratings": {
            "post": {
                "tags": [
                    "Ratings"
                ],
                "summary": "rating a Bike",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bike Id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Rating"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success: A Newly Created Rating",
                        "schema": {
                            "$ref": "#/definitions/Rating"
                        }
                    },
                    "401": {
                        "description": "Refused: Unauthenticated"
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/reinitialiserMotDePasses": {
            "get": {
                "tags": [
                    "ReinitialiserMotDePasses"
                ],
                "summary": "List ReinitialiserMotDePasses",
                "responses": {
                    "200": {
                        "description": "Success: List all ReinitialiserMotDePasses",
                        "schema": {
                            "$ref": "#/definitions/ReinitialiserMotDePasse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/ReinitialiserMotDePasses": {
            "post": {
                "tags": [
                    "ReinitialiserMotDePasses"
                ],
                "summary": "Create ReinitialiserMotDePasse",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ReinitialiserMotDePasse"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success: A Newly Created ReinitialiserMotDePasse",
                        "schema": {
                            "$ref": "#/definitions/ReinitialiserMotDePasse"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            }
        },
        "/api/ReinitialiserMotDePasses/{id}": {
            "get": {
                "tags": [
                    "ReinitialiserMotDePasses"
                ],
                "summary": "Get ReinitialiserMotDePasse by Id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Display the specified ReinitialiserMotDePasse by id.",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the ReinitialiserMotDePasse",
                        "schema": {
                            "$ref": "#/definitions/ReinitialiserMotDePasse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "put": {
                "tags": [
                    "ReinitialiserMotDePasses"
                ],
                "summary": "Update ReinitialiserMotDePasse",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Update the specified ReinitialiserMotDePasse by id.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ReinitialiserMotDePasse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the ReinitialiserMotDePasse updated",
                        "schema": {
                            "$ref": "#/definitions/ReinitialiserMotDePasse"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ReinitialiserMotDePasses"
                ],
                "summary": "Delete ReinitialiserMotDePasse",
                "description": "Delete the specified ReinitialiserMotDePasse by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ReinitialiserMotDePasse id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    },
                    "204": {
                        "description": "Success: successful deleted"
                    }
                }
            }
        },
        "/api/societes": {
            "get": {
                "tags": [
                    "Societes"
                ],
                "summary": "List Societes",
                "responses": {
                    "200": {
                        "description": "Success: List all Societes",
                        "schema": {
                            "$ref": "#/definitions/Societe"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/Societes": {
            "post": {
                "tags": [
                    "Societes"
                ],
                "summary": "Create Societe",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Societe"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success: A Newly Created Societe",
                        "schema": {
                            "$ref": "#/definitions/Societe"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            }
        },
        "/api/Societes/{id}": {
            "get": {
                "tags": [
                    "Societes"
                ],
                "summary": "Get Societe by Id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Display the specified Societe by id.",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the Societe",
                        "schema": {
                            "$ref": "#/definitions/Societe"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "put": {
                "tags": [
                    "Societes"
                ],
                "summary": "Update Societe",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Update the specified Societe by id.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Societe"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the Societe updated",
                        "schema": {
                            "$ref": "#/definitions/Societe"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Societes"
                ],
                "summary": "Delete Societe",
                "description": "Delete the specified Societe by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Societe id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    },
                    "204": {
                        "description": "Success: successful deleted"
                    }
                }
            }
        },
        "/api/transits": {
            "get": {
                "tags": [
                    "Transits"
                ],
                "summary": "List Transits",
                "responses": {
                    "200": {
                        "description": "Success: List all Transits",
                        "schema": {
                            "$ref": "#/definitions/Transit"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/Transits": {
            "post": {
                "tags": [
                    "Transits"
                ],
                "summary": "Create Transit",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Transit"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success: A Newly Created Transit",
                        "schema": {
                            "$ref": "#/definitions/Transit"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            }
        },
        "/api/Transits/{id}": {
            "get": {
                "tags": [
                    "Transits"
                ],
                "summary": "Get Transit by Id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Display the specified Transit by id.",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the Transit",
                        "schema": {
                            "$ref": "#/definitions/Transit"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "put": {
                "tags": [
                    "Transits"
                ],
                "summary": "Update Transit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Update the specified Transit by id.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Transit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the Transit updated",
                        "schema": {
                            "$ref": "#/definitions/Transit"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Transits"
                ],
                "summary": "Delete Transit",
                "description": "Delete the specified Transit by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transit id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    },
                    "204": {
                        "description": "Success: successful deleted"
                    }
                }
            }
        },
        "/api/typeMarchandises": {
            "get": {
                "tags": [
                    "TypeMarchandises"
                ],
                "summary": "List TypeMarchandises",
                "responses": {
                    "200": {
                        "description": "Success: List all TypeMarchandises",
                        "schema": {
                            "$ref": "#/definitions/TypeMarchandise"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/TypeMarchandises": {
            "post": {
                "tags": [
                    "TypeMarchandises"
                ],
                "summary": "Create TypeMarchandise",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TypeMarchandise"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success: A Newly Created TypeMarchandise",
                        "schema": {
                            "$ref": "#/definitions/TypeMarchandise"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            }
        },
        "/api/TypeMarchandises/{id}": {
            "get": {
                "tags": [
                    "TypeMarchandises"
                ],
                "summary": "Get TypeMarchandise by Id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Display the specified TypeMarchandise by id.",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the TypeMarchandise",
                        "schema": {
                            "$ref": "#/definitions/TypeMarchandise"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "put": {
                "tags": [
                    "TypeMarchandises"
                ],
                "summary": "Update TypeMarchandise",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Update the specified TypeMarchandise by id.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Json format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TypeMarchandise"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Return the TypeMarchandise updated",
                        "schema": {
                            "$ref": "#/definitions/TypeMarchandise"
                        }
                    },
                    "422": {
                        "description": "Missing mandatory field"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            },
            "delete": {
                "tags": [
                    "TypeMarchandises"
                ],
                "summary": "Delete TypeMarchandise",
                "description": "Delete the specified TypeMarchandise by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "TypeMarchandise id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    },
                    "204": {
                        "description": "Success: successful deleted"
                    }
                }
            }
        }
    },
    "definitions": {
        "Action": {
            "required": [
                "libelle",
                "utilisateur"
            ],
            "properties": {
                "libelle": {
                    "description": "libelle d\u00e9crivant l'action effectu\u00e9e",
                    "type": "string",
                    "example": "insertion dans la table employe"
                },
                "utilisateur": {
                    "description": "utilisateur effectuant l'action d\u00e9crit",
                    "type": "string",
                    "example": "2"
                }
            }
        },
        "Adresse": {
            "required": [
                "ville",
                "pays"
            ],
            "properties": {
                "ville": {
                    "description": "Ville dans laquelle se trouve l'employ\u00e9 ou la soci\u00e9t\u00e9",
                    "type": "string",
                    "example": "Kara,Lom\u00e9"
                },
                "pays": {
                    "description": "Pays dans lequel se trouve l'employ\u00e9 ou la soci\u00e9t\u00e9",
                    "type": "string",
                    "example": "Togo,Ghana"
                },
                "rue": {
                    "description": "N\u00b0 Rue",
                    "type": "string",
                    "example": "rue centrale 332"
                },
                "quartier": {
                    "description": "quartier",
                    "type": "string",
                    "example": "Tokoin-Gbadago"
                },
                "arrondissement": {
                    "description": "arrondissement",
                    "type": "string",
                    "example": "arrondissement 5eme"
                },
                "region": {
                    "description": "r\u00e9gion",
                    "type": "string",
                    "example": "Maritime"
                }
            }
        },
        "Bike": {
            "required": [
                "make",
                "model",
                "year",
                "mods"
            ],
            "properties": {
                "make": {
                    "description": "Company name",
                    "type": "string",
                    "example": "Harley Davidson, Honda, Yamaha"
                },
                "model": {
                    "description": "Motorcycle model",
                    "type": "string",
                    "example": "Xl1200, Shadow ACE, V-Star"
                },
                "year": {
                    "description": "Fabrication year",
                    "type": "string",
                    "example": "2009, 2008, 2007"
                },
                "mods": {
                    "description": "Motorcycle description of modifications",
                    "type": "string",
                    "example": "New exhaust system"
                },
                "picture": {
                    "description": "Bike image URL",
                    "type": "string",
                    "example": "http://www.sample.com/my.bike.jpg"
                },
                "builder_id": {
                    "description": "Association with: builder_id",
                    "type": "integer",
                    "example": "1"
                }
            }
        },
        "Builder": {
            "required": [
                "name",
                "description",
                "location"
            ],
            "properties": {
                "name": {
                    "description": "Builder name",
                    "type": "string",
                    "example": "Jesse James"
                },
                "description": {
                    "description": "Famous Motorcycle builder from Texas",
                    "type": "string",
                    "example": "Austin Speed Shop"
                },
                "location": {
                    "description": "Texas/USA",
                    "type": "string",
                    "example": "Austin, Texas"
                }
            }
        },
        "Employe": {
            "required": [
                "nom",
                "prenom",
                "dateNaiss",
                "adresse"
            ],
            "properties": {
                "nom": {
                    "description": "nom de l'employ\u00e9",
                    "type": "string",
                    "example": "VLAMISKOT, DJEALE"
                },
                "prenom": {
                    "description": "prenom de l'employ\u00e9",
                    "type": "string",
                    "example": "komi, Jack, Jessica"
                },
                "dateNaiss": {
                    "description": "date de naissance de l'employ\u00e9",
                    "type": "Date",
                    "example": "2009/23/05, 2008/23/11, 2007/09/06"
                },
                "adresse": {
                    "description": "Association with: builder_id",
                    "type": "integer",
                    "example": "2"
                }
            }
        },
        "EtatsLivraison": {
            "required": [
                "libelle"
            ],
            "properties": {
                "libelle": {
                    "description": "libelle d\u00e9crivant l'\u00e9tat de la livraon",
                    "type": "string",
                    "example": "Livr\u00e9, Attente"
                }
            }
        },
        "Garage": {
            "required": [
                "name",
                "custumer_level"
            ],
            "properties": {
                "name": {
                    "description": "Jhonny Garage",
                    "type": "string",
                    "example": "Exhaust"
                },
                "customer_level": {
                    "description": "Whats the garage level",
                    "type": "integer",
                    "example": "10"
                }
            }
        },
        "Item": {
            "required": [
                "type",
                "name",
                "company",
                "bike_id"
            ],
            "properties": {
                "type": {
                    "description": "Item Type",
                    "type": "string",
                    "example": "Exhaust"
                },
                "name": {
                    "description": "Item name",
                    "type": "string",
                    "example": "2 into 1 Exhaust"
                },
                "company": {
                    "description": "Produced by: some company",
                    "type": "string",
                    "example": "Vance and Hines"
                },
                "bike_id": {
                    "description": "Association with: bike_id",
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "LieuxLivraison": {
            "required": [
                "libelle"
            ],
            "properties": {
                "libelle": {
                    "description": "libelle d\u00e9crivant le lieux de la livraison",
                    "type": "string",
                    "example": "Grande entr\u00e9e"
                }
            }
        },
        "Livraison": {
            "required": [
                "transit",
                "dateLivrDemBB",
                "dateLivrEffectiveBB",
                "dateConfirmFourn",
                "dateDebStationnement",
                "dateDebSures",
                "d\u00e9laiDateArrDateLivr",
                "etatLivr"
            ],
            "properties": {
                "transit": {
                    "description": "designation d\u00e9crivant le transit de la Livraison",
                    "type": "string",
                    "example": "3"
                },
                "dateLivrDemandeeParBB": {
                    "description": "designation d\u00e9crivant la date de livraison demand\u00e9e par la BB",
                    "type": "string",
                    "example": "24/04/2020"
                },
                "dateReportApresEchecDeLivr": {
                    "description": "designation d\u00e9crivant la date de report suite \u00e0 un \u00e9chec de livraison",
                    "type": "string",
                    "example": "16/05/2020"
                },
                "dateConfirmFourn": {
                    "description": "designation d\u00e9crivant la date de la comfirmation du fournisseur",
                    "type": "string",
                    "example": "25/04/2020"
                },
                "lieuLivr": {
                    "description": "designation d\u00e9crivant le lieu de la Livraison",
                    "type": "string",
                    "example": "Lom\u00e9"
                },
                "dateLivrEffectiveBB": {
                    "description": "designation d\u00e9crivant la date de livraison effective \u00e0 la BB",
                    "type": "string",
                    "example": "16/10/2011"
                },
                "dateDebStationnement": {
                    "description": "designation d\u00e9crivant la date de stationnement au port",
                    "type": "string",
                    "example": "16/10/2011"
                },
                "dateDebSures": {
                    "description": "designation d\u00e9crivant le lieu de surestation",
                    "type": "string",
                    "example": "16/10/2011"
                },
                "nombreJourDeStationnementSub": {
                    "description": "designation d\u00e9crivant le nombre de jour de stationnement subi par la Livraison",
                    "type": "string",
                    "example": "5"
                },
                "nombeJourSuresSubi": {
                    "description": "designation d\u00e9crivant le nombre de jour de sures subi par la Livraison",
                    "type": "string",
                    "example": "3"
                },
                "d\u00e9laiDateArrDateLivr": {
                    "description": "designation d\u00e9crivant le d\u00e9lai entre la date d'arriv\u00e9e et la date de livraison",
                    "type": "string",
                    "example": "7"
                },
                "etatLivr": {
                    "description": "designation d\u00e9crivant l'\u00e9tat' de la Livraison",
                    "type": "string",
                    "example": "Livr\u00e9"
                },
                "Commmentaires": {
                    "description": "designation d\u00e9crivant les commentaires faits sur la Livraison",
                    "type": "string",
                    "example": "Liraison ayant eu probl\u00e8me alpha b\u00eata et consort"
                }
            }
        },
        "Marchandise": {
            "required": [
                "libelle"
            ],
            "properties": {
                "libelle": {
                    "description": "libelle d\u00e9crivant la marchandise",
                    "type": "string",
                    "example": "Malta"
                },
                "typeMarchandise": {
                    "description": "type d\u00e9crivant la marchandise",
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "Navire": {
            "required": [
                "libelle",
                "contenanceTotale"
            ],
            "properties": {
                "libelle": {
                    "description": "libelle d\u00e9crivant le Navire",
                    "type": "string",
                    "example": "Malt"
                },
                "contenaceTotale": {
                    "description": "libelle d\u00e9crivant le Navire",
                    "type": "string",
                    "example": "Malt"
                }
            }
        },
        "Profil": {
            "required": [
                "libelle"
            ],
            "properties": {
                "libelle": {
                    "description": "libelle d\u00e9crivant le profil",
                    "type": "string",
                    "example": "Root"
                }
            }
        },
        "Rating": {
            "required": [
                "bike_id",
                "user_id",
                "rating"
            ],
            "properties": {
                "biker_id": {
                    "description": "Bike id",
                    "type": "integer",
                    "example": "1"
                },
                "user_id": {
                    "description": "User id",
                    "type": "integer",
                    "example": "2"
                },
                "rating": {
                    "description": "Vote by rating",
                    "type": "integer",
                    "example": "10"
                }
            }
        },
        "ReinitialiserMotDePasse": {
            "required": [
                "email",
                "token"
            ],
            "properties": {
                "email": {
                    "description": "email de l'utilisateur qui veut r\u00e9initialiser son mot de passe",
                    "type": "string",
                    "example": "inconnu@gmail.com"
                },
                "token": {
                    "description": "token enregistr\u00e9 lors du changement du mot de passe",
                    "type": "string",
                    "example": "gHYC676Nj8Hj7\u00e88nbhyu\u00e8NuydRcVJhbyUy76\u00e8HnbHUY879NPOsqk"
                }
            }
        },
        "Societe": {
            "required": [
                "nom",
                "prenom",
                "dateNaiss",
                "adresse"
            ],
            "properties": {
                "libelle": {
                    "description": "libelle de la soci\u00e9t\u00e9",
                    "type": "string",
                    "example": "GRAAL, HI-TECH"
                },
                "adresse": {
                    "description": "Association with: builder_id",
                    "type": "string",
                    "example": "2"
                }
            }
        },
        "Transit": {
            "required": [
                "navire",
                "fournisseur",
                "marchandise",
                "dateArrivee",
                "franchise"
            ],
            "properties": {
                "navire": {
                    "description": "designation d\u00e9crivant le navire du Transit",
                    "type": "string",
                    "example": "Malt"
                },
                "contenance": {
                    "description": "designation d\u00e9crivant la contenance du Transit",
                    "type": "string",
                    "example": "24"
                },
                "fournisseur": {
                    "description": "designation d\u00e9crivant le fournisseur du Transit",
                    "type": "string",
                    "example": "Hi-tech"
                },
                "marchandise": {
                    "description": "designation d\u00e9crivant la marchandise du Transit",
                    "type": "string",
                    "example": "Malta"
                },
                "dateArrivee": {
                    "description": "designation d\u00e9crivant la date d'arriv\u00e9e du Transit",
                    "type": "string",
                    "example": "16/10/2011"
                },
                "franchise": {
                    "description": "designation d\u00e9crivant la franchise du Transit",
                    "type": "string",
                    "example": "27"
                }
            }
        },
        "TypeMarchandise": {
            "required": [
                "libelle"
            ],
            "properties": {
                "libelle": {
                    "description": "libelle d\u00e9crivant le type de la marchandise",
                    "type": "string",
                    "example": "fabrication bi\u00e8re"
                }
            }
        },
        "User": {
            "required": [
                "name",
                "email",
                "password",
                "profil",
                "employe"
            ],
            "properties": {
                "name": {
                    "description": "nom d'utilisateur",
                    "type": "string",
                    "example": "John Conor"
                },
                "email": {
                    "description": "Addresse Email",
                    "type": "string",
                    "example": "john.conor@terminator.com"
                },
                "password": {
                    "description": "Un mot de passe vraiment s\u00e9curis\u00e9",
                    "type": "string",
                    "example": "123456"
                },
                "profil": {
                    "description": "profil de l'utilisateur",
                    "type": "string",
                    "example": "1"
                },
                "employe": {
                    "description": "Employe auquel est associ\u00e9 ce profil",
                    "type": "string",
                    "example": "2"
                },
                "etat": {
                    "description": "etat du compte",
                    "type": "string",
                    "example": "activ\u00e9,d\u00e9sactiv\u00e9"
                },
                "emailVerifiedAt": {
                    "description": "date \u00e0 laquelle \u00e0 \u00e9t\u00e9 v\u00e9rifi\u00e9e l'adresse email",
                    "type": "string",
                    "example": "12/04/2016"
                }
            }
        }
    }
}